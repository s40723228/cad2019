var tipuesearch = {"pages": [{'title': 'WEEK', 'text': 'week2-5 \n week6-9 \n week10-14 \n week15-18 \n', 'tags': '', 'url': 'WEEK.html'}, {'title': 'week2-5', 'text': '', 'tags': '', 'url': 'week2-5.html'}, {'title': 'week6-9', 'text': '', 'tags': '', 'url': 'week6-9.html'}, {'title': 'week10-14', 'text': '\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0第八章 有限元件分析  有限元件分析(FMA)是有限元件方法(FEM)實際運用的一種方式，預測結構或流體對應用因素(例如力，壓力，熱量和振動。) 正常來說，第一步驟都是從創建幾何模型開始，然後將模型細分(網格化)為簡單的，小塊的幾何形狀(元素)在特定的節點上，使材料屬性和邊界條件應用於每個元素。 最終，諸如NX 12之類的軟件解決了這個FEA問題，並輸出了結果和可視化效果。 它可以幫助工程師在製造和測試產品之前更好地了解其性能。 \n FEA的一些應用像是結構分析，熱分析，流體流動力學和電磁兼容性。 其中，FEA最常用於結構和固體力學應用中，以計算機械性能（例如應力和位移）。 這對工件的性能至關重要還有用來預測事故發生。 在本章中，我們將演示如何處理實體零件的結構應力和應變分析。 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 8.1 概述 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 8.1.1元素形狀和節點 元素基於維度的數量和元素中節點的數量可分為不同的類型。 以下是用於離散化的某些元素類型。 \n', 'tags': '', 'url': 'week10-14.html'}, {'title': 'week15-18', 'text': '\n', 'tags': '', 'url': 'week15-18.html'}, {'title': 'Note', 'text': '', 'tags': '', 'url': 'Note.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n \n \n \n', 'tags': '', 'url': 'Develop.html'}]};