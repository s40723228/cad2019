<h1>WEEK</h1>
<p><a href="https://s40723228.github.io/cad2019/content/week2-5.html">week2-5</a></p>
<p><a href="https://s40723228.github.io/cad2019/content/week6-9.html">week6-9</a></p>
<p><a href="https://s40723228.github.io/cad2019/content/week10-14.html">week10-14</a></p>
<p><a href="https://s40723228.github.io/cad2019/content/week15-18.html">week15-18</a></p>
<h2>week2-5</h2>
<h2>week6-9</h2>
<h2>week10-14</h2>
<p style="text-align: left;">                                                             第八章 有限元件分析<br/> 有限元件分析(FMA)是有限元件方法(FEM)實際運用的一種方式，預測結構或流體對應用因素(例如力，壓力，熱量和振動。)<br/>正常來說，第一步驟都是從創建幾何模型開始，然後將模型細分(網格化)為簡單的，小塊的幾何形狀(元素)在特定的節點上，使材料屬性和邊界條件應用於每個元素。<br/>最終，諸如NX 12之類的軟件解決了這個FEA問題，並輸出了結果和可視化效果。 它可以幫助工程師在製造和測試產品之前更好地了解其性能。</p>
<p style="text-align: left;"><br/>FEA的一些應用像是結構分析，熱分析，流體流動力學和電磁兼容性。<br/>其中，FEA最常用於結構和固體力學應用中，以計算機械性能（例如應力和位移）。<br/>這對工件的性能至關重要還有用來預測事故發生。<br/>在本章中，我們將演示如何處理實體零件的結構應力和應變分析。</p>
<p style="text-align: left;">                                                                        8.1 概述<br/>                                                            8.1.1元素形狀和節點<br/>元素基於維度的數量和元素中節點的數量可分為不同的類型。<br/>以下是用於離散化的某些元素類型。<br/><br/><br/></p>
<h2>week15-18</h2>
<p></p>
<h1>Note</h1>
<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<p>test1</p>
<p></p>
<p></p>
<p></p>
<p></p>